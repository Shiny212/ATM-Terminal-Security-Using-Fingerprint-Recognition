#include <SPI.h>
#include <LiquidCrystal_I2C.h>
#include <Adafruit_Fingerprint.h>
#include <Keypad.h>

const int ROW_NUM    = 4; //four rows
const int COLUMN_NUM = 4; //four columns


char keys[ROW_NUM][COLUMN_NUM] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte pin_rows[ROW_NUM] = {11, 10, 9, 8}; //connect to the row pinouts of the keypad
byte pin_column[COLUMN_NUM] = {7, 6, 5, 4}; //connect to the column pinouts of the keypad

Keypad keypad = Keypad( makeKeymap(keys), pin_rows, pin_column, ROW_NUM, COLUMN_NUM );

const String password_1 = "321A"; // change your password here
const String password_2 = "654B";  // change your password here
const String password_3 = "987C";
String input_password;


LiquidCrystal_I2C lcd(0x27, 16, 2);

#if (defined(_AVR) || defined(ESP8266)) && !defined(AVR_ATmega2560_)
// For UNO and others without hardware serial, we must use software serial...
// pin #2 is IN from sensor (GREEN wire)
// pin #3 is OUT from arduino  (WHITE wire)
// Set up the serial port to use softwareserial..
SoftwareSerial mySerial(2, 3);

#else
// On Leonardo/M0/etc, others with hardware serial, use hardware serial!
// #0 is green wire, #1 is white
#define mySerial Serial1

#endif
Adafruit_Fingerprint finger = Adafruit_Fingerprint(&mySerial);

int ent = 0;
int check;
void setup() {
   input_password.reserve(32);

  Serial.begin(9600);  // Initiate a serial communication
  Serial.println("Approximate your finger to the sensor...");
  Serial.println();
  lcd.begin();
  lcd.backlight();
 Serial.begin(9600);
  while (!Serial);  // For Yun/Leo/Micro/Zero/...
  delay(100);
 
  finger.begin(57600);
  delay(5);
  if (finger.verifyPassword()) {
    Serial.println("Found fingerprint sensor!");
  } else {
    Serial.println("Did not find fingerprint sensor :(");
    while (1) { delay(1); }
  }

  //Serial.println(F("Reading sensor parameters"));
  finger.getParameters();
 // Serial.print(F("Status: 0x"));
//  Serial.println(finger.status_reg, HEX);
 // Serial.print(F("Sys ID: 0x"));
  //Serial.println(finger.system_id, HEX);
 // Serial.print(F("Capacity: "));
//  Serial.println(finger.capacity);
 // Serial.print(F("Security level: "));
 // Serial.println(finger.security_level);
 // Serial.print(F("Device address: "));
 // Serial.println(finger.device_addr, HEX);
 // Serial.print(F("Packet len: "));
 // Serial.println(finger.packet_len);
  //Serial.print(F("Baud rate: "));
  //Serial.println(finger.baud_rate);

  finger.getTemplateCount();

  if (finger.templateCount == 0) {
    Serial.print("Sensor doesn't contain any fingerprint data. Please run the 'enroll' example.");
  } else {
   // Serial.println("Waiting for valid finger...");
  //  Serial.print("Sensor contains ");
  //  Serial.print(finger.templateCount);
   // Serial.println(" templates");
  }
  lcd.setCursor(0, 0);
    lcd.print("Welcome to ATM");
    lcd.setCursor(0, 1);
    lcd.print("Security System");
    //delay(6000);
    //lcd.clear();
}

void loop() {
  int fdt = getFingerprintID();
 
  char key = keypad.getKey();
    
    
  if (key) {
    Serial.println(key);

    if (key == '*') {
      input_password = ""; // reset the input password
    } else if (key == '#') {{
      if (input_password == password_1 && check == 5) {
        Serial.println("The password is correct");
        Serial.println("Access Granted");
        delay(2000);
        lcd.clear();
        lcd.setCursor(0, 0);
    lcd.print("Password Correct");
    lcd.setCursor(0, 1);
    lcd.print("Access Granted");
    delay(6000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Press Cancel");
    lcd.setCursor(0, 1);
    lcd.print("Button");
    delay(2000);
    //lcd.clear();
        
      } 
      else if (input_password == password_2 && check == 6) {
        Serial.println("The password is correct");
        Serial.println("Access Granted");
        delay(2000);
        lcd.clear();
        lcd.setCursor(0, 0);
    lcd.print("Password Correct");
    lcd.setCursor(0, 1);
    lcd.print("Access Granted");
    delay(6000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Press Cancel");
    lcd.setCursor(0, 1);
    lcd.print("Button");
    delay(2000);
    //lcd.clear();

    
      }
       else if (input_password == password_3 && check == 7) {
        Serial.println("The password is correct");
        Serial.println("Access Granted");
        delay(2000);
        lcd.clear();
         lcd.setCursor(0, 0);
    lcd.print("Password Correct");
    lcd.setCursor(0, 1);
    lcd.print("Access Granted");
    delay(6000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Press Cancel");
    lcd.setCursor(0, 1);
    lcd.print("Button");
    delay(2000);
    //lcd.clear();
      }
      
      
      else   {
        Serial.println("The password is incorrect, try again");
         lcd.clear();
        lcd.setCursor(0, 0);
    lcd.print("Password Wrong");
    lcd.setCursor(0, 1);
    lcd.print("Access Denined");
    delay(6000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Press Cancel");
    lcd.setCursor(0, 1);
    lcd.print("Button");
    delay(2000);
    //lcd.clear();
      }
    }
      input_password = ""; // reset the input password 
    } 
    else 
    {
      input_password += key; // append new character to input password string
    }
  }   
 
  if (fdt == 1) {
 
    Serial.println("Name : SHINY");
    //delay(3000);
    Serial.println("Enter 4 Digit Password");
    check = 5;
    lcd.setCursor(0, 0);
    lcd.print("FINGER DETECTED");
    lcd.setCursor(0, 1);
    lcd.print("NAME:");
    lcd.print("SHINY");
    delay(4000);
    
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Enter 4 Digit");
    lcd.setCursor(0, 1);
    lcd.print("Password:");
    lcd.print(key);
    //delay(2000);
    

     }
   if (fdt == 4) {
   
    Serial.println("Name : SRINIDHI");
    //delay(3000);
    Serial.println("Enter 4 Digit Password");
    fdt = 0;
    check = 6;
    lcd.setCursor(0, 0);
    lcd.print("FINGER DETECTED");
    lcd.setCursor(0, 1);
    lcd.print("NAME:");
    lcd.print("SRINIDHI");
    delay(4000);
    
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Enter 4 Digit");
    lcd.setCursor(0, 1);
    lcd.print("Password:");
    lcd.print(key);
    //delay(2000);
    
     
     }


  if (fdt == 5) {
  
    Serial.println("Name : LAKSHMI");
    //delay(3000);
    Serial.println("Enter 4 Digit Password");
    fdt = 0;
    check = 7;
     lcd.setCursor(0, 0);
    lcd.print("FINGER DETECTED");
    lcd.setCursor(0, 1);
    lcd.print("NAME:");
    lcd.print("LAKSHMI");
    delay(4000);
    
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Enter 4 Digit");
    lcd.setCursor(0, 1);
    lcd.print("Password:");
    lcd.print(key);
    //delay(2000);
    
     }
}



     

uint8_t getFingerprintID() {
  uint8_t p = finger.getImage();
  switch (p) {
    case FINGERPRINT_OK:
      //Serial.println("Image taken");
      break;
    case FINGERPRINT_NOFINGER:
      //Serial.println("No finger detected");
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      //Serial.println("Communication error");
      return p;
    case FINGERPRINT_IMAGEFAIL:
      //Serial.println("Imaging error");
      return p;
    default:
      //Serial.println("Unknown error");
      return p;
  }

  p = finger.image2Tz();
  switch (p) {
    case FINGERPRINT_OK:
      //Serial.println("Image converted");
      break;
    case FINGERPRINT_IMAGEMESS:
      //Serial.println("Image too messy");
      return p;
    case FINGERPRINT_PACKETRECIEVEERR:
      //Serial.println("Communication error");
      return p;
    case FINGERPRINT_FEATUREFAIL:
      //Serial.println("Could not find fingerprint features");
      return p;
    case FINGERPRINT_INVALIDIMAGE:
      //Serial.println("Could not find fingerprint features");
      return p;
    default:
      //Serial.println("Unknown error");
      return p;
  }

  p = finger.fingerSearch();
  if (p == FINGERPRINT_OK) {
    //Serial.println("Found a print match!");
  } else if (p == FINGERPRINT_PACKETRECIEVEERR) {
    //Serial.println("Communication error");
    return p;
  } else if (p == FINGERPRINT_NOTFOUND) {
    //Serial.println("Did not find a match");
    return p;
  } else {
    //Serial.println("Unknown error");
    return p;
  }

  return finger.fingerID;
}
